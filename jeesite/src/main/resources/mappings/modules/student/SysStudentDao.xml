<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.student.dao.SysStudentDao">
    
	<sql id="sysStudentColumns">
		a.id AS "id",
		a.student_id AS "studentId",
		a.studentlogin_name AS "studentloginName",
		a.student_password AS "studentPassword",
		a.student_name AS "studentName",
		a.student_email AS "studentEmail",
		a.student_phone AS "studentPhone",
		a.student_gender AS "studentGender",
		a.student_photo AS "studentPhoto",
		a.login_ip AS "loginIp",
		a.login_date AS "loginDate",
		a.login_flag AS "loginFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.sort AS "sort"
	</sql>
	
	<sql id="sysStudentJoins">
	</sql>
    
	<select id="get" resultType="SysStudent">
		SELECT 
			<include refid="sysStudentColumns"/>
		FROM sys_student a
		<include refid="sysStudentJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="SysStudent">
		SELECT 
			<include refid="sysStudentColumns"/>
		FROM sys_student a
		<include refid="sysStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="studentId != null and studentId != ''">
				AND a.student_id = #{studentId}
			</if>
			<if test="studentloginName != null and studentloginName != ''">
				AND a.studentlogin_name = #{studentloginName}
			</if>
			<if test="studentPassword != null and studentPassword != ''">
				AND a.student_password = #{studentPassword}
			</if>
			<if test="studentName != null and studentName != ''">
				AND a.student_name = #{studentName}
			</if>
			<if test="studentEmail != null and studentEmail != ''">
				AND a.student_email = #{studentEmail}
			</if>
			<if test="studentPhone != null and studentPhone != ''">
				AND a.student_phone = #{studentPhone}
			</if>
			<if test="studentGender != null and studentGender != ''">
				AND a.student_gender = #{studentGender}
			</if>
		</where>

		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.student_id ASC
			</otherwise>
		</choose>

	</select>
	
	<select id="findAllList" resultType="SysStudent">
		SELECT 
			<include refid="sysStudentColumns"/>
		FROM sys_student a
		<include refid="sysStudentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.student_id ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO sys_student(
			id,
			student_id,
			studentlogin_name,
			student_password,
			student_name,
			student_email,
			student_phone,
			student_gender,
			student_photo,
			login_ip,
			login_date,
			login_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			sort
		) VALUES (
			#{id},
			#{studentId},
			#{studentloginName},
			#{studentPassword},
			#{studentName},
			#{studentEmail},
			#{studentPhone},
			#{studentGender},
			#{studentPhoto},
			#{loginIp},
			#{loginDate},
			#{loginFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{sort}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_student SET 	
			student_id = #{studentId},
			studentlogin_name = #{studentloginName},
			student_password = #{studentPassword},
			student_name = #{studentName},
			student_email = #{studentEmail},
			student_phone = #{studentPhone},
			student_gender = #{studentGender},
			student_photo = #{studentPhoto},
			login_ip = #{loginIp},
			login_date = #{loginDate},
			login_flag = #{loginFlag},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_student SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>